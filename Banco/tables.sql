CREATE TABLE CLIENTE(
	ID_CLIENTE INT PRIMARY KEY AUTO_INCREMENT,
    ATIVO boolean NOT NULL default true, 
    DATA_CADASTRO datetime not null default NOW(),
    CPF varchar(11),
    NOME varchar(120) not null,
    CELULAR varchar(13),
    TELEFONE varchar(12)
);

CREATE TABLE ENDERECO_CLIENTE(
	ID_ENDERECO INT PRIMARY KEY AUTO_INCREMENT,
	ID_CLIENTE int NOT NULL,
	CEP CHAR(8),
	LOGRADOURO varchar(120),
	NUMERO VARCHAR(30),
	COMPLEMENTO VARCHAR(90),
	BAIRRO VARCHAR(90),
	MUNICIPIO VARCHAR(90),
	UF CHAR(2),
	Constraint fk_cliente_endereco foreign key (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE)
);

CREATE TABLE MOTORISTA(
	ID_MOTORISTA INT PRIMARY KEY AUTO_INCREMENT,
	ATIVO BOOLEAN DEFAULT TRUE,
	DATA_CADASTRO datetime not null default NOW(),
	CPF VARCHAR(11),
	NOME VARCHAR(120),
	CELULAR varchar(13),
	TELEFONE varchar(12)
);


CREATE TABLE ENDERECO_MOTORISTA(
	ID_ENDERECO INT PRIMARY KEY AUTO_INCREMENT,
	ID_MOTORISTA int NOT NULL,
	CEP CHAR(8),
	LOGRADOURO varchar(120),
	NUMERO VARCHAR(30),
	COMPLEMENTO VARCHAR(90),
	BAIRRO VARCHAR(90),
	MUNICIPIO VARCHAR(90),
	UF CHAR(2),
	Constraint fk_motorista_endereco foreign key (ID_MOTORISTA) REFERENCES MOTORISTA(ID_MOTORISTA)
);

CREATE TABLE VAN(
	ID_VAN INT PRIMARY KEY AUTO_INCREMENT,
	ATIVO BOOLEAN NOT NULL DEFAULT TRUE,
	DATA_CADASTRO datetime not null default NOW(),
	ID_MOTORISTA INT NOT NULL,
	PLACA CHAR(7) NOT NULL UNIQUE,
	MODELO VARCHAR(70),
	KM_ATUAL FLOAT,
    CONSTRAINT fK_motorista_van Foreign key (ID_MOTORISTA) REFERENCES MOTORISTA (ID_MOTORISTA)
);

CREATE TABLE CATEGORIA(
	ID_CATEGORIA INT PRIMARY KEY AUTO_INCREMENT,
	DESCRICAO VARCHAR(80) NOT NULL,
	TIPO_CATEGORIA enum('despesa','receita') not null
);
	
CREATE TABLE FORMAS_PAGAMENTO(
	ID_PAGAMENTO INT PRIMARY KEY AUTO_INCREMENT,
	DESCRICAO varchar(60) Not null Unique
);


CREATE TABLE CONTAS_PAGAR(
	ID_CONTAS_PAGAR INT primary KEY auto_increment,
	ID_VAN INT,
	ID_CATEGORIA INT not null,
	ID_PAGAMENTO INT not null,
	DATA_CADASTRO datetime not null default NOW(),
    DATA_VENCIMENTO date not null,
    DATA_PAGAMENTO date,
	DESCRICAO varchar(120),
	VALOR_TITULO decimal(10,3) not null,
	VALOR_PAGO decimal(10,3),
	STATUS_TITULO ENUM('em aberto', 'quitado') not null,
	Constraint fk_van_despesa foreign key (ID_VAN) REFERENCES VAN(ID_VAN),
	Constraint fk_categoria_despesa foreign key (ID_CATEGORIA) REFERENCES CATEGORIA (ID_CATEGORIA),
	CONSTRAINT fk_pagamento_despesa foreign key (ID_PAGAMENTO) REFERENCES FORMAS_PAGAMENTO (ID_PAGAMENTO),
    Constraint chk_pagar_validar_data CHECK (
		(VALOR_PAGO IS NULL AND DATA_PAGAMENTO IS NULL) OR 
		(VALOR_PAGO = 0 AND DATA_PAGAMENTO IS NULL) or
		(VALOR_PAGO > 0 AND DATA_PAGAMENTO IS NOT NULL)
    )
);

CREATE TABLE CONTAS_RECEBER(
	ID_CONTAS_RECEBER INT primary KEY auto_increment,
	ID_CLIENTE INT,
	ID_CATEGORIA INT not null,
	ID_PAGAMENTO INT not null,
	DATA_CADASTRO datetime not null default NOW(),
    DATA_VENCIMENTO date not null,
    DATA_RECEBIMENTO date, 
	DESCRICAO varchar(120),
	VALOR_TITULO decimal(10,3) not null,
	VALOR_PAGO decimal(10,3),
	STATUS_TITULO ENUM('em aberto', 'quitado') not null,
	Constraint fk_cliente_receita foreign key (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE),
	Constraint fk_categoria_receita foreign key (ID_CATEGORIA) REFERENCES CATEGORIA (ID_CATEGORIA),
	CONSTRAINT fk_pagamento_receita foreign key (ID_PAGAMENTO) REFERENCES FORMAS_PAGAMENTO (ID_PAGAMENTO),
    Constraint chk_receber_validar_data CHECK (
		(VALOR_PAGO is null AND DATA_RECEBIMENTO IS NULL) OR 
		(VALOR_PAGO = 0 AND DATA_RECEBIMENTO IS NULL) or
		(VALOR_PAGO > 0 AND DATA_RECEBIMENTO IS NOT NULL) 
    )
);



    